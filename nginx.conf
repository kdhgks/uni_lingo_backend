events {}

http {
  # WebSocket 업그레이드 매핑
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # 업스트림: Django ASGI/Gunicorn 이 뜨는 web 컨테이너
  upstream django_upstream {
    server web:8000;
  }

  # ===============================
  # 80: HTTP → HTTPS 리다이렉트 (+ ACME)
  # ===============================
  server {
    listen 80;
    server_name unilingo.duckdns.org;

    # certbot http-01 갱신을 위해 열어둠
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # 나머지 모든 요청은 HTTPS로
    location / {
      return 301 https://$host$request_uri;
    }

    access_log /var/log/nginx/unilingo_access.log;
    error_log  /var/log/nginx/unilingo_error.log;
  }

  # ===============================
  # 443: HTTPS 메인 서버
  # ===============================
  server {
    listen 443 ssl http2;
    server_name unilingo.duckdns.org;

    # --- Let's Encrypt 인증서 경로 ---
    ssl_certificate     /etc/letsencrypt/live/unilingo.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/unilingo.duckdns.org/privkey.pem;

    # --- SSL 권장 옵션 ---
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # certbot 갱신용
    location /.well-known/acme-challenge/ { root /var/www/certbot; }

    # 정적/미디어 파일 (docker volume과 경로 일치)
    location /static/ {
      alias /static/;
      expires 1y;
      add_header Cache-Control "public, immutable";
    }

    location /media/ {
      alias /media/;
      expires 1M;
      add_header Cache-Control "public";
    }

    # 헬스체크
    location /healthz/ {
      proxy_pass http://django_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5s;
      proxy_send_timeout 5s;
      proxy_read_timeout 5s;
    }

    # WebSocket (ASGI)
    location /ws/ {
      proxy_pass http://django_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      proxy_connect_timeout 10s;

      proxy_buffering off;
      proxy_request_buffering off;
    }

    # 기본 프록시 (Django REST/API)
    location / {
      proxy_pass http://django_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_connect_timeout 30s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      proxy_buffering on;
      proxy_buffer_size 4k;
      proxy_buffers 8 4k;
    }

    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 업로드 제한
    client_max_body_size 10M;

    # 로그
    access_log /var/log/nginx/unilingo_access.log;
    error_log  /var/log/nginx/unilingo_error.log;
  }
}
